{"remainingRequest":"/home/maha/mahaTinkoff/tinkoff-test1/node_modules/babel-loader/lib/index.js??ref--4-1!/home/maha/mahaTinkoff/tinkoff-test1/src/main-form/index.jsx","dependencies":[{"path":"/home/maha/mahaTinkoff/tinkoff-test1/src/main-form/index.jsx","mtime":1524726729490},{"path":"/home/maha/mahaTinkoff/tinkoff-test1/node_modules/cache-loader/dist/cjs.js","mtime":1524727190256},{"path":"/home/maha/mahaTinkoff/tinkoff-test1/node_modules/babel-loader/lib/index.js","mtime":1520329890000}],"contextDependencies":[],"result":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = undefined;\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _dec, _class, _class2, _temp;\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _reactCssModules = require('react-css-modules');\n\nvar _reactCssModules2 = _interopRequireDefault(_reactCssModules);\n\nvar _indexModule = require('./index.module.less');\n\nvar _indexModule2 = _interopRequireDefault(_indexModule);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _index = require('../base/submit-button/index.jsx');\n\nvar _index2 = _interopRequireDefault(_index);\n\nvar _InputNames = require('../consts/InputNames');\n\nvar _inputUi = require('../base/input/input-ui.jsx');\n\nvar _inputUi2 = _interopRequireDefault(_inputUi);\n\nvar _index3 = require('../base/label/index.jsx');\n\nvar _index4 = _interopRequireDefault(_index3);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar MainForm = (_dec = (0, _reactCssModules2.default)(_indexModule2.default, { allowMultiple: true }), _dec(_class = (_temp = _class2 = function (_React$Component) {\n  _inherits(MainForm, _React$Component);\n\n  function MainForm(props) {\n    _classCallCheck(this, MainForm);\n\n    var _this = _possibleConstructorReturn(this, (MainForm.__proto__ || Object.getPrototypeOf(MainForm)).call(this, props));\n\n    _this.state = props.state;\n    _this.handlerOnInputChange = _this.handlerOnInputChange.bind(_this);\n    return _this;\n  }\n\n  _createClass(MainForm, [{\n    key: 'shouldComponentUpdate',\n    value: function shouldComponentUpdate(nextProps, nextState) {\n      console.log(this.state.inputArray[0].value + nextState.inputArray[0].value);\n      if (this.state.inputArray[0].value === nextState.inputArray[0].value && nextState.inputArray[0].value !== '') {\n        return false;\n      }\n      return true;\n    }\n  }, {\n    key: 'componentWillUpdate',\n    value: function componentWillUpdate(nextProps, nextState) {\n      console.log(nextState);\n    }\n  }, {\n    key: 'isNumeric',\n    value: function isNumeric(n) {\n      return !isNaN(parseFloat(n)) && isFinite(n);\n    }\n  }, {\n    key: 'handlerOnInputChange',\n    value: function handlerOnInputChange(input) {\n      var curSum = '',\n          curNumLots = '';\n\n      if (input.value !== '' && this.isNumeric(input.value)) {\n        switch (input.name) {\n          case _InputNames.SUM_NAME:\n            {\n              curNumLots = Math.floor(input.value / this.state.lotPrice) > this.state.lotAmount ? this.state.lotAmount : Math.floor(input.value / this.state.lotPrice);\n              curSum = input.value;\n            }\n            break;\n          case _InputNames.LOTS_NAME:\n            {\n              curNumLots = input.value > this.state.lotAmount ? this.state.lotAmount : input.value;\n              curSum = curNumLots * this.state.lotPrice;\n            }\n        }\n      }\n\n      var curState = _extends({}, this.state);\n      curState.inputArray[0].value = curSum;\n      curState.inputArray[1].value = curNumLots;\n      this.setState();\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var _this2 = this;\n\n      return _react2.default.createElement(\n        'div',\n        { styleName: 'main-container' },\n        _react2.default.createElement(\n          'form',\n          { styleName: 'main-form' },\n          _react2.default.createElement(\n            'div',\n            { styleName: 'label-container' },\n            this.state.labelArray.map(function (label, i) {\n              return _react2.default.createElement(_index4.default, { title: label.title,\n                data: label.data,\n                numOrder: i });\n            })\n          ),\n          _react2.default.createElement(\n            'div',\n            { styleName: 'input-container' },\n            this.state.inputArray.map(function (input, i) {\n              return _react2.default.createElement(_inputUi2.default, { title: input.title,\n                name: input.name,\n                numOrder: i,\n                curValue: input.value,\n                handlerOnChange: _this2.handlerOnInputChange });\n            })\n          ),\n          _react2.default.createElement(\n            'div',\n            { styleName: 'output-container' },\n            _react2.default.createElement(_index2.default, { formValid: this.state.formValid }),\n            _react2.default.createElement(\n              'div',\n              { styleName: 'comission' },\n              '\\u0412\\u043A\\u043B\\u044E\\u0447\\u0430\\u044F \\u043A\\u043E\\u043C\\u0438\\u0441\\u0441\\u0438\\u044E 45 ',\n              this.state.currency\n            )\n          )\n        )\n      );\n    }\n  }]);\n\n  return MainForm;\n}(_react2.default.Component), _class2.propTypes = {\n  state: _propTypes2.default.object.required\n}, _temp)) || _class);\nexports.default = MainForm;\n;",{"version":3,"sources":["src/main-form/index.jsx"],"names":["MainForm","allowMultiple","props","state","handlerOnInputChange","bind","nextProps","nextState","console","log","inputArray","value","n","isNaN","parseFloat","isFinite","input","curSum","curNumLots","isNumeric","name","Math","floor","lotPrice","lotAmount","curState","setState","labelArray","map","label","i","title","data","formValid","currency","Component","propTypes","object","required"],"mappings":";;;;;;;;;;;;;AAAA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;AACA;;;;AACA;;;;;;;;;;;;IAGqBA,Q,WADpB,sDAAmB,EAACC,eAAe,IAAhB,EAAnB,C;;;AAEC,oBAAYC,KAAZ,EAAmB;AAAA;;AAAA,oHACXA,KADW;;AAEjB,UAAKC,KAAL,GAAaD,MAAMC,KAAnB;AACA,UAAKC,oBAAL,GAA4B,MAAKA,oBAAL,CAA0BC,IAA1B,OAA5B;AAHiB;AAIlB;;;;0CAEqBC,S,EAAWC,S,EAAW;AAC1CC,cAAQC,GAAR,CAAY,KAAKN,KAAL,CAAWO,UAAX,CAAsB,CAAtB,EAAyBC,KAAzB,GACVJ,UAAUG,UAAV,CAAqB,CAArB,EAAwBC,KAD1B;AAEA,UAAI,KAAKR,KAAL,CAAWO,UAAX,CAAsB,CAAtB,EAAyBC,KAAzB,KAAmCJ,UAAUG,UAAV,CAAqB,CAArB,EAAwBC,KAA3D,IACFJ,UAAUG,UAAV,CAAqB,CAArB,EAAwBC,KAAxB,KAAkC,EADpC,EACwC;AACtC,eAAO,KAAP;AACD;AACD,aAAO,IAAP;AACD;;;wCAEmBL,S,EAAWC,S,EAAW;AACxCC,cAAQC,GAAR,CAAYF,SAAZ;AACD;;;8BAESK,C,EAAG;AACX,aAAO,CAACC,MAAMC,WAAWF,CAAX,CAAN,CAAD,IAAyBG,SAASH,CAAT,CAAhC;AACD;;;yCAMoBI,K,EAAO;AAC1B,UAAIC,SAAS,EAAb;AAAA,UAAiBC,aAAa,EAA9B;;AAEA,UAAIF,MAAML,KAAN,KAAgB,EAAhB,IAAsB,KAAKQ,SAAL,CAAeH,MAAML,KAArB,CAA1B,EAAuD;AACrD,gBAAQK,MAAMI,IAAd;AACE;AAAe;AACbF,2BAAcG,KAAKC,KAAL,CAAWN,MAAML,KAAN,GAAc,KAAKR,KAAL,CAAWoB,QAApC,IACZ,KAAKpB,KAAL,CAAWqB,SADA,GAEX,KAAKrB,KAAL,CAAWqB,SAFA,GAGXH,KAAKC,KAAL,CAAWN,MAAML,KAAN,GAAc,KAAKR,KAAL,CAAWoB,QAApC,CAHF;AAIAN,uBAASD,MAAML,KAAf;AACD;AACC;AACF;AAAgB;AACdO,2BAAcF,MAAML,KAAN,GAAc,KAAKR,KAAL,CAAWqB,SAA1B,GACX,KAAKrB,KAAL,CAAWqB,SADA,GAEXR,MAAML,KAFR;AAGAM,uBAASC,aAAa,KAAKf,KAAL,CAAWoB,QAAjC;AACD;AAdH;AAgBD;;AAED,UAAME,wBAAe,KAAKtB,KAApB,CAAN;AACAsB,eAASf,UAAT,CAAoB,CAApB,EAAuBC,KAAvB,GAA+BM,MAA/B;AACAQ,eAASf,UAAT,CAAoB,CAApB,EAAuBC,KAAvB,GAA+BO,UAA/B;AACA,WAAKQ,QAAL;AACD;;;6BAES;AAAA;;AACR,aACE;AAAA;AAAA,UAAK,WAAU,gBAAf;AACE;AAAA;AAAA,YAAM,WAAU,WAAhB;AACE;AAAA;AAAA,cAAK,WAAU,iBAAf;AACG,iBAAKvB,KAAL,CAAWwB,UAAX,CAAsBC,GAAtB,CAA0B,UAACC,KAAD,EAAQC,CAAR;AAAA,qBACzB,iDAAW,OAAOD,MAAME,KAAxB;AACW,sBAAMF,MAAMG,IADvB;AAEW,0BAAUF,CAFrB,GADyB;AAAA,aAA1B;AADH,WADF;AAOE;AAAA;AAAA,cAAK,WAAU,iBAAf;AACG,iBAAK3B,KAAL,CAAWO,UAAX,CAAsBkB,GAAtB,CAA0B,UAACZ,KAAD,EAAQc,CAAR;AAAA,qBACzB,mDAAO,OAAOd,MAAMe,KAApB;AACO,sBAAMf,MAAMI,IADnB;AAEO,0BAAUU,CAFjB;AAGO,0BAAUd,MAAML,KAHvB;AAIO,iCAAiB,OAAKP,oBAJ7B,GADyB;AAAA,aAA1B;AADH,WAPF;AAeE;AAAA;AAAA,cAAK,WAAU,kBAAf;AACE,6DAAc,WAAW,KAAKD,KAAL,CAAW8B,SAApC,GADF;AAEE;AAAA;AAAA,gBAAK,WAAU,WAAf;AAAA;AACuB,mBAAK9B,KAAL,CAAW+B;AADlC;AAFF;AAfF;AADF,OADF;AA0BD;;;;EApFmC,gBAAMC,S,WAyBnCC,S,GAAY;AACjBjC,SAAO,oBAAUkC,MAAV,CAAiBC;AADP,C;kBAzBAtC,Q;AAqFpB","file":"index.jsx","sourceRoot":"/home/maha/mahaTinkoff/tinkoff-test1","sourcesContent":["import React from 'react';\nimport CSSModules from 'react-css-modules';\nimport styles from './index.module.less';\nimport PropTypes from 'prop-types';\nimport SubmitButton from '../base/submit-button/index.jsx';\nimport { LOTS_NAME, SUM_NAME } from '../consts/InputNames';\nimport Input from '../base/input/input-ui.jsx';\nimport DataLabel from '../base/label/index.jsx';\n\n@CSSModules(styles, {allowMultiple: true})\nexport default class MainForm extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = props.state;\n    this.handlerOnInputChange = this.handlerOnInputChange.bind(this);\n  }\n\n  shouldComponentUpdate(nextProps, nextState) {\n    console.log(this.state.inputArray[0].value +\n      nextState.inputArray[0].value);\n    if (this.state.inputArray[0].value === nextState.inputArray[0].value &&\n      nextState.inputArray[0].value !== '') {\n      return false;\n    }\n    return true;\n  }\n\n  componentWillUpdate(nextProps, nextState) {\n    console.log(nextState);\n  }\n\n  isNumeric(n) {\n    return !isNaN(parseFloat(n)) && isFinite(n);\n  }\n\n  static propTypes = {\n    state: PropTypes.object.required\n  };\n\n  handlerOnInputChange(input) {\n    let curSum = '', curNumLots = '';\n\n    if (input.value !== '' && this.isNumeric(input.value)) {\n      switch (input.name) {\n        case SUM_NAME: {\n          curNumLots = (Math.floor(input.value / this.state.lotPrice) >\n            this.state.lotAmount) ?\n            this.state.lotAmount :\n            Math.floor(input.value / this.state.lotPrice);\n          curSum = input.value;\n        }\n          break;\n        case LOTS_NAME: {\n          curNumLots = (input.value > this.state.lotAmount) ?\n            this.state.lotAmount :\n            input.value;\n          curSum = curNumLots * this.state.lotPrice;\n        }\n      }\n    }\n\n    const curState = {...this.state};\n    curState.inputArray[0].value = curSum;\n    curState.inputArray[1].value = curNumLots;\n    this.setState();\n  }\n\n  render () {\n    return(\n      <div styleName=\"main-container\">\n        <form styleName=\"main-form\">\n          <div styleName=\"label-container\">\n            {this.state.labelArray.map((label, i) =>\n              <DataLabel title={label.title}\n                         data={label.data}\n                         numOrder={i}/>)}\n          </div>\n          <div styleName=\"input-container\">\n            {this.state.inputArray.map((input, i) =>\n              <Input title={input.title}\n                     name={input.name}\n                     numOrder={i}\n                     curValue={input.value}\n                     handlerOnChange={this.handlerOnInputChange}/>)}\n          </div>\n          <div styleName=\"output-container\">\n            <SubmitButton formValid={this.state.formValid}/>\n            <div styleName=\"comission\">\n              Включая комиссию 45 {this.state.currency}\n            </div>\n          </div>\n        </form>\n      </div>\n    )\n  };\n};\n"]}]}