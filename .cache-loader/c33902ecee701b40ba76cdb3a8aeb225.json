{"remainingRequest":"/home/maha/mahaTinkoff/tinkoff-test1/node_modules/babel-loader/lib/index.js??ref--4-1!/home/maha/mahaTinkoff/tinkoff-test1/src/main-form/MainFormContainer.js","dependencies":[{"path":"/home/maha/mahaTinkoff/tinkoff-test1/src/main-form/MainFormContainer.js","mtime":1524778991224},{"path":"/home/maha/mahaTinkoff/tinkoff-test1/node_modules/cache-loader/dist/cjs.js","mtime":1524727190256},{"path":"/home/maha/mahaTinkoff/tinkoff-test1/node_modules/babel-loader/lib/index.js","mtime":1520329890000}],"contextDependencies":[],"result":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = undefined;\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _MainForm = require('./MainForm');\n\nvar _MainForm2 = _interopRequireDefault(_MainForm);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar MainFormContainer = function (_React$Component) {\n  _inherits(MainFormContainer, _React$Component);\n\n  function MainFormContainer(props) {\n    _classCallCheck(this, MainFormContainer);\n\n    var _this = _possibleConstructorReturn(this, (MainFormContainer.__proto__ || Object.getPrototypeOf(MainFormContainer)).call(this, props));\n\n    _this.state = props.state;\n\n    _this.handleOnValidData = _this.handleOnValidData.bind(_this);\n    return _this;\n  }\n\n  _createClass(MainFormContainer, [{\n    key: 'getFullPrice',\n    value: function getFullPrice(lotSize) {\n      return new Promise(function (resolve, reject) {\n        resolve({\n          fullPrice: { value: 100000, currency: 'RUB' },\n          comission: { value: 100, currency: 'RUB' }\n        });\n      });\n    }\n  }, {\n    key: 'handleOnValidData',\n    value: function handleOnValidData(sum, numLots) {\n      var _this2 = this;\n\n      this.getFullPrice(numLots).then(function (ans) {\n        return _this2.setState(function (prevState) {\n          var curState = _extends({}, prevState);\n\n          curState.inputArray[0].value = sum;\n          curState.inputArray[1].value = numLots;\n          curState.comission = ans.comission;\n          curState.fullPrice = ans.fullPrice;\n          curState.enablePurchase = true;\n          return curState;\n        });\n      }, function (err) {});\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      return _react2.default.createElement(_MainForm2.default, { formState: this.state,\n        handleOnValidData: this.handleOnValidData });\n    }\n  }]);\n\n  return MainFormContainer;\n}(_react2.default.Component);\n\nexports.default = MainFormContainer;\n;",{"version":3,"sources":["src/main-form/MainFormContainer.js"],"names":["MainFormContainer","props","state","handleOnValidData","bind","lotSize","Promise","resolve","reject","fullPrice","value","currency","comission","sum","numLots","getFullPrice","then","setState","prevState","curState","inputArray","ans","enablePurchase","Component"],"mappings":";;;;;;;;;;;AAAA;;;;AAEA;;;;;;;;;;;;IAEqBA,iB;;;AACnB,6BAAYC,KAAZ,EAAmB;AAAA;;AAAA,sIACXA,KADW;;AAEjB,UAAKC,KAAL,GAAaD,MAAMC,KAAnB;;AAEA,UAAKC,iBAAL,GAAyB,MAAKA,iBAAL,CAAuBC,IAAvB,OAAzB;AAJiB;AAKlB;;;;iCAEYC,O,EAAS;AACpB,aAAO,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACtCD,gBAAQ;AACNE,qBAAW,EAAEC,OAAO,MAAT,EAAiBC,UAAU,KAA3B,EADL;AAENC,qBAAW,EAAEF,OAAO,GAAT,EAAcC,UAAU,KAAxB;AAFL,SAAR;AAID,OALM,CAAP;AAMD;;;sCAEiBE,G,EAAKC,O,EAAS;AAAA;;AAC9B,WAAKC,YAAL,CAAkBD,OAAlB,EACGE,IADH,CAEI;AAAA,eACE,OAAKC,QAAL,CAAc,UAACC,SAAD,EAAe;AAC3B,cAAIC,wBAAeD,SAAf,CAAJ;;AAEAC,mBAASC,UAAT,CAAoB,CAApB,EAAuBV,KAAvB,GAA+BG,GAA/B;AACAM,mBAASC,UAAT,CAAoB,CAApB,EAAuBV,KAAvB,GAA+BI,OAA/B;AACAK,mBAASP,SAAT,GAAqBS,IAAIT,SAAzB;AACAO,mBAASV,SAAT,GAAqBY,IAAIZ,SAAzB;AACAU,mBAASG,cAAT,GAA0B,IAA1B;AACA,iBAAOH,QAAP;AACD,SATD,CADF;AAAA,OAFJ,EAaI,eAAO,CAEN,CAfL;AAiBD;;;6BAES;AACR,aACE,oDAAU,WAAW,KAAKjB,KAA1B;AACU,2BAAmB,KAAKC,iBADlC,GADF;AAID;;;;EA1C4C,gBAAMoB,S;;kBAAhCvB,iB;AA2CpB","file":"MainFormContainer.js","sourceRoot":"/home/maha/mahaTinkoff/tinkoff-test1","sourcesContent":["import React from 'react';\n\nimport MainForm from './MainForm'\n\nexport default class MainFormContainer extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = props.state;\n\n    this.handleOnValidData = this.handleOnValidData.bind(this);\n  }\n\n  getFullPrice(lotSize) {\n    return new Promise((resolve, reject) => {\n      resolve({\n        fullPrice: { value: 100000, currency: 'RUB' },\n        comission: { value: 100, currency: 'RUB' }\n      })\n    })\n  }\n\n  handleOnValidData(sum, numLots) {\n    this.getFullPrice(numLots)\n      .then(\n        ans =>\n          this.setState((prevState) => {\n            let curState = {...prevState};\n\n            curState.inputArray[0].value = sum;\n            curState.inputArray[1].value = numLots;\n            curState.comission = ans.comission;\n            curState.fullPrice = ans.fullPrice;\n            curState.enablePurchase = true;\n            return curState;\n          }),\n        err => {\n\n        }\n      )\n  }\n\n  render () {\n    return(\n      <MainForm formState={this.state}\n                handleOnValidData={this.handleOnValidData}/>\n    )\n  };\n};\n"]}]}